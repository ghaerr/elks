<!DOCTYPE HTML PUBLIC "-//IETF//DTD HTML 3.0//EN">
<!--
  $Id: announce.html.in,v 1.40 2000/10/20 10:38:47 tom Exp $
-->
<HTML>
<HEAD>
<TITLE>Announcing ncurses @VERSION@</TITLE>
<link rev=made href="mailto:bug-ncurses@gnu.org">
</HEAD>
<BODY>

<H1>Announcing ncurses @VERSION@</H1>

The ncurses (new curses) library is a free software emulation of
curses in System V Release 4.0, and more.  It uses terminfo format,
supports pads and color
and multiple highlights and forms characters and function-key mapping,
and has all the other SYSV-curses enhancements over BSD curses.<P>

In mid-June 1995, the maintainer of 4.4BSD curses declared that he
considered 4.4BSD curses obsolete, and is encouraging the keepers of
Unix releases such as BSD/OS, freeBSD and netBSD to switch over to
ncurses.<P>

The ncurses code was developed under GNU/Linux.  It should port easily to
any ANSI/POSIX-conforming UNIX.  It has even been ported to OS/2 Warp!<P>

The distribution includes the library and support utilities, including a
terminfo compiler tic(1), a decompiler infocmp(1), clear(1), tput(1), tset(1),
and a termcap conversion tool captoinfo(1).  Full manual pages are provided for
the library and tools.<P>

The ncurses distribution is available via anonymous FTP at
the GNU distribution site
<A HREF="ftp://ftp.gnu.org/pub/gnu/ncurses">ftp://ftp.gnu.org/pub/gnu/ncurses</A>.
<br>It is also available at
<A HREF="ftp://dickey.his.com/ncurses">ftp://dickey.his.com/ncurses</A>.

<H1>Release Notes</H1>

This release is designed to be upward compatible from ncurses 5.0 and 5.1;
very few applications will require recompilation, depending on the platform.
These are the highlights from the change-log since ncurses 5.1 release.
<p>
Interface changes:
<ul>
	<li>change type of <code>ospeed</code> variable back to
	  <code>short</code> to match its use in legacy applications.  It was
	  altered after ncurses 4.2 to <code>speed_t</code> to repair a type
	  mismatch which was introduced after 1.9.4 in 1995.  The principal
	  users of termcap continued to use <code>short</code>, which is
	  not the same size.
	  <p>
	  <em>NOTE</em>: A few applications will have to be recompiled
	  (about 1% of the programs in a typical Linux distribution,
	  10% of the programs that use ncurses).  These are easy to
	  identify with <code>nm</code> or <code>strings</code>.

	<li>remove a private function <code>_nc_can_clear_with()</code>, which
	  was built with the configure --enable-expanded option but not used.

	<li>add several private functions (prefixed with "_nc_") for tracing
	  <code>chtype</code> values in the debug library, and for better
	  access and buffer limit checking.
</ul>
New features and improvements:
<ul>
	<li>rewrote <code>tgoto()</code> to make it better support existing
	  termcap applications which use hardcoded strings rather than obtain
	  all of their information from the termcap file.  If the string does
	  not appear to be a terminfo string (i.e., does not refer to a "%p"
	  parameter, or terminfo-style padding), and termcap support is configured, <code>tgoto()</code>
	  will interpret it as termcap.  Otherwise, as before, it will use
	  <code>tparm()</code>.

	<li>to ensure that the <code>tgoto()</code> changes work properly,
	  added checks to <code>tic</code> which report capabilities that do
	  not reference the expected number of parameters.

	<li>new configure script options:
	<ul>
	  <li>option <code>--disable-root-environ</code> adds runtime checks
	    which tell ncurses to disregard $TERMINFO and similar environment
	    variables if the current user is root, or running setuid/setgid.

	  <li>option <code>--disable-assumed-color</code> allows you to use the
	    pre-5.1 convention of default colors used for color-pair 0 to be
	    configured (see assume_default_colors()).

	  <li>implement configure script options that transform installed
	    program names, e.g., <code>--program-prefix</code>, including the
	    manpage names and cross references.

	  <li>option <code>--with-database</code> allows you to specify a
	    different terminfo source-file to install.  On OS/2 EMX, the
	    default is misc/emx.src, otherwise misc/terminfo.src

	  <li>option <code>--with-default-terminfo-dir</code> allows you to
	    specify the default terminfo database directory.

	  <li>option <code>--with-libtool</code> allows you to build with
	    <code>libtool</code>.  <p> <em>NOTE</em>:  <code>libtool</code>
	    uses a different notation for numbering shared library versions
	    from the existing ncurses configuration.

	  <li>option <code>--with-manpage-tbl</code> causes the manpages to be
	    preprocessed by tbl(1) prior to installation,

	  <li>option <code>--without-curses-h</code> causes the installation
	    process to install curses.h as ncurses.h and make appropriate
	    changes to headers and manpages.
	</ul>

	<li>modified configure script options:
	<ul>
	  <li>change symbol used by the <code>--install-prefix</code> configure
	    option from <code>INSTALL_PREFIX</code> to <code>DESTDIR</code>
	    (the latter has become common usage although the name is
	    misleading).

	  <li>modify <code>ld -rpath</code> options (e.g., Linux, and Solaris)
	    to use an absolute pathname for the build tree's lib directory,
	    avoiding confusion with directories relative to the current one
	    with the installed programs.

	  <li>modified <code>misc/run_tic.in</code> to use
	    <code>tic&nbsp;-o</code>, to eliminate dependency on
	    <code>$TERMINFO</code> variable for installs.
	</ul>

	<li>terminfo database:
	<ul>
	  <li>updated xterm terminfo entries to match XFree86 xterm patch #146.

	  <li>added amiga-vnc,
	    Matrix Orbital, and
	    QNX qansi to misc/terminfo.src.

	  <li>added os2 entry to misc/emx.src.

	  <li>add S0 and E0 extensions to <code>screen</code>'s terminfo entry
	    since otherwise the FreeBSD port makes it pass termcap equivalents
	    to <code>tgoto</code>, which would be misinterpreted by older
	    versions of ncurses.
	</ul>

	<li>improvements to program usability:
	<ul>
	  <li>modify programs to use <code>curses_version()</code> string to
	    report the version of ncurses with which they are compiled rather
	    than the NCURSES_VERSION string.  The function returns the patch
	    level in addition to the major and minor version numbers.

	  <li>modify <code>tput</code> program so it can be renamed or invoked via a link as
	    'reset' or 'init', producing the same effect as <code>tput&nbsp;reset</code> or <code>tput&nbsp;init</code>.

	  <li>add error checking to infocmp's -v and -m options to ensure that
	    the option value is indeed a number.
	</ul>

	<li>improved performance:
	<ul>
	  <li>replace a lookup table in lib_vidattr.c used to decode
	    <code>no_color_video</code> with a logic expression which is faster.
	</ul>

</ul>
Major bug fixes:
<ul>
	<li>correct <code>manlinks.sed</code> script introduced in ncurses 5.1
	  to avoid using ERE "\+", which is not understood by standard versions
	  of <code>sed</code>.  This happens to work with GNU <code>sed</code>,
	  but is not portable, and was the initial motivation for this release.

	<li>remove "hpux10.*" case from CF_SHARED_OPTS configure script macro.
	  This differed from the "hpux*" case by using reversed symbolic
	  links, which made the 5.1 version not match the configuration of
	  5.0 shared libraries.

	<li>guard against corrupt terminfo data:
	  <ul>
	  <li>modify <code>tparm()</code> to disallow arithmetic on strings,
	    analyze the varargs list to read strings as strings and numbers as
	    numbers.

	  <li>modify <code>tparm()</code>'s internal function
	    <code>spop()</code> to treat a null pointer as an empty string.

	  <li>modify <code>parse_format()</code> in lib_tparm.c to ignore
	    precision if it is longer than 10000.

	  <li>rewrote limit checks in lib_mvcur.c using new functions
	    <code>_nc_safe_strcat()</code>, etc.  Made other related changes to
	    check lengths used for <code>strcat()</code> and
	    <code>strcpy()</code>.
	  </ul>

	<li>corrections to screen optimization:
	  <ul>
	  <li>added special case in lib_vidattr.c to reset underline and
	    standout for devices that have no sgr0 defined.

	  <li>change handling of <code>non_dest_scroll_region</code> in
	    tty_update.c to clear text after it is shifted in rather than before
	    shifting out.  Also correct row computation.

	  <li>modify <code>rs2</code> capability in xterm-r6 and similar entries
	    where cursor save/restore bracketed the sequence for resetting video
	    attributes.  The cursor restore would undo that.
	  </ul>

	<li>UTF-8 support:
	<ul>
	  <li>when checking LC_ALL, LC_CTYPE, and LANG environment variables
	    for UTF-8 locale, ignore those which are set to an empty value, as
	    per SUSV2.

	  <li>encode 0xFFFD in UTF-8 with 3 bytes, not 2.

	  <li>modify <code>_nc_utf8_outch()</code> to avoid sign-extension when
	    checking for out-of-range value.
	</ul>

	<li>other library fixes:
	<ul>
	  <li>added checks for an empty <code>$HOME</code> environment
	    variable, to avoid retrieving terminfo descriptions from
	    <code>./.terminfo</code> .

	  <li>change functions <code>_nc_parse_entry()</code> and
	    <code>postprocess_termcap()</code> to avoid using
	    <code>strtok()</code>, because it is non-reentrant.

	  <li>initialize <code>fds[]</code> array to 0's in
	    <code>_nc_timed_wait()</code>; apparently <code>poll()</code> only
	    sets the <code>revents</code> members of that array when there is
	    activity corresponding to the related file.

	  <li>add a check for null pointer in <code>Make_Enum_Type()</code>.

	  <li>fix a heap problem with the c++ binding.

	  <li>correct missing includes for &lt;string.h&gt; in several places,
	    including the C++ binding.  This is not noted by gcc unless we use
	    the <code>-fno-builtin</code> option.
	</ul>

	<li>several fixes for tic:
	  <ul>
	  <li>add a check for empty buffers returned by <code>fgets()</code> in
	    comp_scan.c <code>next_char()</code> function, in case
	    <code>tic</code> is run on a non-text file (fixes a core dump).

	  <li>modify <code>tic</code> to verify that its inputs are really files,
	    in case someone tries to read a directory (or
	    <code>/dev/zero</code>).

	  <li>correct an uninitialized parameter to <code>open_tempfile()</code>
	    in tic.c which made "tic -I" give an ambiguous error message about
	    <code>tmpnam</code>.

	  <li>correct logic in <code>adjust_cancels()</code>, which did not check
	    both alternatives when reclassifying an extended name between
	    boolean, number and string, causing an infinite loop in
	    <code>tic</code>.
	  </ul>

	<li>using new checks in <code>tic</code> for parameter counts in
	  capability strings, found/fixed several errors both in the
	  terminfo database and in the include/Caps file.
	  <ul>
	  <li>modified several terminfo capability strings, including the
	    definitions for setaf, setab, in include/Caps to indicate that the
	    entries are parameterized.  This information is used to tell which
	    strings are translated when converting to termcap.  This fixes a
	    problem where the generated termcap would contain a spurious "%p1"
	    for the terminfo "%p1%d".

	  <li>correct parameter counts in include/Caps for dclk as well as some
	    printer-specific capabilities: csnm, defc, scs, scsd, smgtp, smglp.
	  </ul>

	<li>various fixes for install scripts used to support configure
	  <code>--srcdir</code> and <code>--with-install-prefix</code>.

	<li>correct several mismatches between manpage filename and ".TH"
	  directives, renaming dft_fgbg.3x to default_colors.3x and
	  menu_attribs.3x to menu_attributes.3x.
</ul>

Portability:
<ul>
	<li>configure script:
	<ul>
	  <li>newer config.guess, config.sub, including changes to support OS/2
	    EMX.  The configure script for OS/2 EMX still relies on a patch
	    since there is no (working) support for that platform in the main
	    autoconf distribution.

	  <li>make configure script checks on variables <code>$GCC</code> and
	    <code>$GXX</code> consistently compare against 'yes' rather than
	    test if they are nonnull, since either may be set to the
	    corresponding name of the C or C++ compiler.

	  <li>change configure script to use AC_CANONICAL_SYSTEM rather than
	    AC_CANONICAL_HOST, which means that <code>configure --target</code>
	    will set a default program-prefix.

	  <li>modify the check for big-core to force a couple of memory
	    accesses, which may work as needed for older/less-capable machines
	    (if not, there's still the explicit configure option).

	  <li>modify configure test for <code>tcgetattr()</code> to allow for
	    old implementations, e.g., on BeOS, which only defined it as a
	    macro.

	  <li>add configure check for filesystems (such as OS/2 EMX) which do
	    not distinguish between upper/lowercase filenames, use this to fix
	    tags rules in makefiles.

	  <li>add MKncurses_def.sh to generate fallback definitions for
	    ncurses_cfg.h, to quiet gcc -Wundef warnings, modified ifdef's in
	    code to consistently use "#if" rather than "#ifdef".

	  <li>change most remaining unquoted parameters of <code>test</code> in
	    configure script to use quotes, for instance fixing a problem in the
	    <code>--disable-database</code> option.

	  <li>modify scripts so that "make install.data" works on OS/2 EMX.

	  <li>modify scripts and makefiles so the Ada95 directory builds on
	    OS/2 EMX.
	</ul>

	<li>library:
	<ul>
	<li>replaced case-statement in <code>_nc_tracebits()</code> for CSIZE
	  with a table to simplify working around implementations that define
	  random combinations of the related macros to zero.

	<li>improved OS/2 mouse support by retrying as a 2-button mouse if code
	  fails to set up a 3-button mouse.

	<li>added private entrypoint <code>_nc_basename()</code>, used to
	  consolidate related code in progs, as well as accommodating OS/2 EMX
	  pathnames.

	<li>alter definition of NCURSES_CONST to make it non-empty.

	<li>redefine 'TEXT' in menu.h for AMIGA, since it is reported to have
	  an (unspecified) symbol conflict.
	</ul>

	<li>programs:
	<ul>
	  <li>modified progs/tset.c and tack/sysdep.c to build with sgttyb
	    interface if neither termio or termios is available.  Tested this
	    with FreeBSD 2.1.5 (which does have termios - but the sgttyb does
	    work).
	</ul>

</ul>

<H1>Features of Ncurses</H1>

The ncurses package is fully compatible with SVr4 (System V Release 4) curses:

<UL>
<LI>All 257 of the SVr4 calls have been implemented (and are documented).
<LI>Full support for SVr4 curses features including keyboard mapping, color,
forms-drawing with ACS characters, and automatic recognition of keypad
and function keys.
<LI>An emulation of the SVr4 panels library, supporting
a stack of windows with backing store, is included.
<LI>An emulation of the SVr4 menus library, supporting
a uniform but flexible interface for menu programming, is included.
<LI>An emulation of the SVr4 form library, supporting
data collection through on-screen forms, is included.
<LI>Binary terminfo entries generated by the ncurses tic(1) implementation
are bit-for-bit-compatible with the entry format SVr4 curses uses.
<LI>The utilities have options to allow you to filter terminfo
entries for use with less capable <STRONG>curses</STRONG>/<STRONG>terminfo</STRONG>
versions such as the HP/UX and AIX ports.</UL>

The ncurses package also has many useful extensions over SVr4:

<UL>
<LI>The API is 8-bit clean and base-level conformant with the X/OPEN curses
specification, XSI curses (that is, it implements all BASE level features,
but not all EXTENDED features).  Most EXTENDED-level features not directly
concerned with wide-character support are implemented, including many
function calls not supported under SVr4 curses (but portability of all
calls is documented so you can use the SVr4 subset only).
<LI>Unlike SVr3 curses, ncurses can write to the rightmost-bottommost corner
of the screen if your terminal has an insert-character capability.
<LI>Ada95 and C++ bindings.
<LI>Support for mouse event reporting with X Window xterm and OS/2 console windows.
<LI>Extended mouse support via Alessandro Rubini's gpm package.
<LI>The function <CODE>wresize()</CODE> allows you to resize windows, preserving
their data.
<LI>The function <CODE>use_default_colors()</CODE> allows you to
use the terminal's default colors for the default color pair,
achieving the effect of transparent colors.
<LI>The functions <CODE>keyok()</CODE>
and <CODE>define_key()</CODE> allow
you to better control the use of function keys,
e.g., disabling the ncurses KEY_MOUSE,
or by defining more than one control sequence to map to a given key code.
<LI>Support for 16-color terminals, such as aixterm and XFree86 xterm.
<LI>Better cursor-movement optimization.  The package now features a
cursor-local-movement computation more efficient than either BSD's
or System V's.
<LI>Super hardware scrolling support.  The screen-update code incorporates
a novel, simple, and cheap algorithm that enables it to make optimal
use of hardware scrolling, line-insertion, and line-deletion
for screen-line movements.  This algorithm is more powerful than
the 4.4BSD curses quickch() routine.
<LI>Real support for terminals with the magic-cookie glitch.  The
screen-update code will refrain from drawing a highlight if the magic-
cookie unattributed spaces required just before the beginning and
after the end would step on a non-space character.  It will
automatically shift highlight boundaries when doing so would make it
possible to draw the highlight without changing the visual appearance
of the screen.
<LI>It is possible to generate the library with a list of pre-loaded
fallback entries linked to it so that it can serve those terminal types even
when no terminfo tree or termcap file is accessible (this may be useful
for support of screen-oriented programs that must run in single-user mode).
<LI>The tic(1)/captoinfo utility provided with ncurses has the
ability to translate many termcaps from the XENIX, IBM and
AT&amp;T extension sets.
<LI>A BSD-like tset(1) utility is provided.
<LI>The ncurses library and utilities will automatically read terminfo
entries from $HOME/.terminfo if it exists, and compile to that directory
if it exists and the user has no write access to the system directory.
This feature makes it easier for users to have personal terminfo entries
without giving up access to the system terminfo directory.
<LI>You may specify a path of directories to search for compiled
descriptions with the environment variable TERMINFO_DIRS (this
generalizes the feature provided by TERMINFO under stock System V.)
<LI>In terminfo source files, use capabilities may refer not just to
other entries in the same source file (as in System V) but also to
compiled entries in either the system terminfo directory or the user's
$HOME/.terminfo directory.
<LI>A script (<STRONG>capconvert</STRONG>) is provided to help BSD users
transition from termcap to terminfo.  It gathers the information in a
TERMCAP environment variable and/or a ~/.termcap local entries file
and converts it to an equivalent local terminfo tree under $HOME/.terminfo.
<LI>Automatic fallback to the /etc/termcap file can be compiled in
when it is not possible to build a terminfo tree.  This feature is neither
fast nor cheap, you don't want to use it unless you have to,
but it's there.
<LI>The table-of-entries utility <STRONG>toe</STRONG> makes it easy for users to
see exactly what terminal types are available on the system.
<LI>The library meets the XSI requirement that every macro entry
point have a corresponding function which may be linked (and will be
prototype-checked) if the macro definition is disabled with
<CODE>#undef</CODE>.
<LI>An HTML "Introduction to Programming with NCURSES" document provides
a narrative introduction to the curses programming interface.
</UL>

<H1>State of the Package</H1>

Numerous bugs present in earlier versions have been fixed; the
library is far more reliable than it used to be.  Bounds checking in many
`dangerous' entry points has been improved.  The code is now type-safe
according to gcc -Wall.  The library has been checked for malloc leaks and
arena corruption by the Purify memory-allocation tester.<P>

The ncurses code has been tested with a wide variety of applications
including (versions starting with those noted):
<DL>
<DT> cdk
<DD> Curses Development Kit
<br>
<A HREF="http://www.vexus.ca/CDK.html">http://www.vexus.ca/CDK.html</a>
<br>
<A HREF="http://dickey.his.com/cdk/cdk.html">http://dickey.his.com/cdk</A>.
<DT> ded
<DD> directory-editor
<br>
<A HREF="http://dickey.his.com/ded/ded.html">http://dickey.his.com/ded</A>.
<DT> dialog
<DD> the underlying application used in Slackware's setup, and the basis
for similar applications on GNU/Linux.
<br>
<A HREF="http://dickey.his.com/dialog/dialog.html">http://dickey.his.com/dialog</A>.
<DT> lynx
<DD> the character-screen WWW browser
<br>
<A HREF="http://lynx.isc.org/release/">http://lynx.isc.org/release</A>.
<DT> Midnight Commander 4.1
<DD> file manager
<br>
<A HREF="www.gnome.org/mc/">www.gnome.org/mc/</A>.
<DT> mutt
<DD> mail utility
<br>
<A HREF="http://www.mutt.org">http://www.mutt.org</A>.
<DT> ncftp
<DD> file-transfer utility
<br>
<A HREF="http://www.ncftp.com">http://www.ncftp.com</A>.
<DT> nvi
<DD> New vi versions 1.50 are able to use ncurses versions 1.9.7 and later.
<br>
<A HREF="http://www.bostic.com/vi/">http://www.bostic.com/vi/</A>.
<DT> tin
<DD> newsreader, supporting color, MIME
<br>
<A HREF="http://www.tin.org">http://www.tin.org</A>.
<DT> taper
<DD> tape archive utility
<br>
<A HREF="http://members.iinet.net.au/~yusuf/taper/">http://members.iinet.net.au/~yusuf/taper/</A>.
<DT> vh-1.6
<DD> Volks-Hypertext browser for the Jargon File
<br>
<A HREF="http://www.bg.debian.org/Packages/unstable/text/vh.html">http://www.bg.debian.org/Packages/unstable/text/vh.html</A>.
</DL>
as well as some that use ncurses for the terminfo support alone:
<DL>
<DT> minicom
<DD> terminal emulator
<br>
<A HREF="http://www.pp.clinet.fi/~walker/minicom.html">http://www.pp.clinet.fi/~walker/minicom.html</A>.
<DT> vile
<DD> vi-like-emacs
<br>
<A HREF="http://dickey.his.com/vile/vile.html">http://dickey.his.com/vile</A>.
</DL>
<P>

The ncurses distribution includes a selection of test programs (including
a few games).

<H2>Who's Who and What's What</H2>

The original developers of ncurses are <A
HREF="mailto:zmbenhal@netcom.com">Zeyd Ben-Halim</A> and
<A HREF="http://www.ccil.org/~esr/home.html">Eric S. Raymond</A>.
Ongoing work is being done by
<A HREF="mailto:dickey@herndon4.his.com">Thomas Dickey</A>
and
<A HREF="mailto:juergen.pfeifer@gmx.net">J&uuml;rgen Pfeifer</A>.
<A HREF="mailto:dickey@herndon4.his.com">Thomas Dickey</A>
acts as the maintainer for the Free Software Foundation, which holds the
copyright on ncurses.
Contact the current maintainers at
<A HREF="mailto:bug-ncurses@gnu.org">bug-ncurses@gnu.org</A>.
<P>

To join the ncurses mailing list, please write email to
<CODE>bug-ncurses-request@gnu.org</CODE> containing the line:
<PRE>
             subscribe &lt;name&gt;@&lt;host.domain&gt;
</PRE>

This list is open to anyone interested in helping with the development and
testing of this package.<P>

Beta versions of ncurses and patches to the current release are made available at
<A HREF="ftp://dickey.his.com/ncurses">ftp://dickey.his.com/ncurses</A>.

<H2>Future Plans</H2>
<UL>
<LI>Extended-level XPG4 conformance, with internationalization support.
<LI>Ports to more systems, including DOS and Windows.
</UL>
We need people to help with these projects.  If you are interested in working
on them, please join the ncurses list.

<H2>Other Related Resources</H2>

The distribution includes and uses a version of the terminfo-format
terminal description file maintained by Eric Raymond.
<A HREF="http://earthspace.net/~esr/terminfo">http://earthspace.net/~esr/terminfo</A>.<P>

You can find lots of information on terminal-related topics
not covered in the terminfo file at
<A HREF="http://www.cs.utk.edu/~shuford/terminal_index.html">Richard Shuford's
archive</A>.
</BODY>
</HTML>
<!--
# The following sets edit modes for GNU EMACS
# Local Variables:
# mode:html
# case-fold-search:nil
# fill-column:70
# End:
-->
